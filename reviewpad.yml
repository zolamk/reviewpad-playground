# This file is used to configure Reviewpad.
# The configuration is a proposal to help you get started.
# You can use it as a starting point and customize it to your needs.
# For more details see https://docs.reviewpad.com/guides/syntax.

# Define the version of Reviewpad to be used.
api-version: reviewpad.com/v3.x
# Define the list of workflows to be run by Reviewpad.
# A workflow is a list of actions that will be executed based on the defined rules.
# For more details see https://docs.reviewpad.com/guides/syntax#workflow.
workflows:
  # This workflow praises contributors on their pull request contributions.
  # This helps contributors feel appreciated.
  - name: praise-contributors-on-milestones
    description: Praise contributors based on their contributions
    always-run: true
    if:
      # Praise contributors on their first pull request.
      - rule: $pullRequestCountBy($author()) == 1
        extra-actions:
          - $commentOnce($sprintf("Thank you @%s for this first contribution!", [$author()]))
      # Praise contributors on their 100th pull request.
      - rule: $pullRequestCountBy($author()) == 100
        extra-actions:
          - $commentOnce($sprintf("Way to go ðŸŽ‰ This is your 100th pull request!", [$author()]))

  # This workflow validates that pull requests follow the conventional commits specification.
  # This helps developers automatically generate changelogs.
  # For more details, see https://www.conventionalcommits.org/en/v1.0.0/.
  - name: check-conventional-commits
    description: Validate that pull requests follow the conventional commits
    always-run: true
    if:
      - rule: $isDraft() == false
    then:
      # Check commits messages against the conventional commits specification
      - $commitLint()
      # Check pull request title against the conventional commits specification.
      - $titleLint()
